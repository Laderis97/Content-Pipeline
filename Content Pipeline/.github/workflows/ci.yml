name: Content Pipeline CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  css-lint:
    name: CSS Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run CSS linting
        run: npm run lint:css:check
      
      - name: Upload Stylelint results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: stylelint-results
          path: stylelint-results.json

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Run accessibility tests
        run: npm run test:accessibility
      
      - name: Upload accessibility results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: accessibility-results
          path: test-results/

  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Run visual regression tests
        run: npm run test:visual
      
      - name: Upload visual regression results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: visual-regression-results
          path: test-results/

  css-validation:
    name: CSS Validation Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Run CSS validation tests
        run: npm run test:css
      
      - name: Upload CSS validation results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: css-validation-results
          path: test-results/

  lighthouse:
    name: Lighthouse Performance Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Run Lighthouse tests
        run: npm run test:lighthouse
      
      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: lighthouse-results
          path: test-results/

  all-tests:
    name: All Tests
    runs-on: ubuntu-latest
    needs: [css-lint, accessibility-tests, visual-regression, css-validation, lighthouse]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Run all tests
        run: npm run test:all
      
      - name: Upload all test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: all-test-results
          path: test-results/
